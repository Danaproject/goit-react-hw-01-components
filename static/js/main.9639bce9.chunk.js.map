{"version":3,"sources":["default.svg","components/Profile.jsx","components/StatItem.jsx","components/StatList.jsx","components/Statistics.jsx","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","className","src","width","alt","followers","views","likes","defaultProps","defaultAvatar","StatItem","label","percentage","StatList","map","dataItem","id","Statistics","title","titleMarkup","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0aAAe,MAA0B,oC,OCGnCA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,MAAhC,OACZ,sBAAKC,UAAU,UAAf,UACA,sBAAKA,UAAU,cAAf,UACI,qBACAC,IAAKN,EACLO,MAAM,QACNC,IAAI,cACJH,UAAU,WAEV,mBAAGA,UAAU,OAAb,SAAqBJ,IACrB,oBAAGI,UAAU,MAAb,cAAqBH,KACrB,mBAAGG,UAAU,WAAb,SAAyBF,OAG7B,qBAAIE,UAAU,QAAd,UACI,+BACA,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,eAElC,+BACA,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,WAElC,+BACA,sBAAML,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMO,kBAM1CZ,EAAQa,aAAe,CACnBZ,OAAQa,GAiBGd,QC7CAe,EAPE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACT,qBAAIX,UAAU,OAAd,UACI,sBAAMA,UAAU,QAAhB,SAAyBU,IACzB,uBAAMV,UAAU,aAAhB,UAA8BW,EAA9B,WCmBGC,EAnBE,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAH,OACT,oBAAIC,UAAU,YAAd,SACKD,EAAMc,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CAA4BJ,MAAOI,EAASJ,MAAOC,WAAYG,EAASH,YAAzDG,EAASC,UCKzBC,EATI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOlB,EAAY,EAAZA,MACnBmB,EAAcD,GAAS,oBAAIjB,UAAU,QAAd,SAAuBiB,IACpD,OACI,0BAASjB,UAAU,aAAnB,UACKkB,EACD,cAAC,EAAD,CAAUnB,MAAOA,Q,cCiBdoB,MAlBf,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,qDACA,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CACEJ,KAAMwB,EAAKxB,KACXC,IAAKuB,EAAKvB,IACVC,SAAUsB,EAAKtB,SACfH,OAAQyB,EAAKzB,OACbI,MAAOqB,EAAKrB,QAEd,cAAC,EAAD,CAAYkB,MAAM,eAAelB,MAAOsB,WCdhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9639bce9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.15422c43.svg\";","import PropTypes from \"prop-types\";\nimport defaultAvatar from '../default.svg';\n\nconst Profile = ({ avatar, name, tag, location, stats }) => (\n    <div className=\"profile\">\n    <div className=\"description\">\n        <img\n        src={avatar} \n        width=\"100px\"\n        alt=\"User avatar\"\n        className=\"avatar\"\n        />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n    </div>\n\n    <ul className=\"stats\">\n        <li>\n        <span className=\"label\">Followers</span>\n        <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n        <span className=\"label\">Views</span>\n        <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n        <span className=\"label\">Likes</span>\n        <span className=\"quantity\">{stats.likes}</span>\n        </li>\n    </ul>\n    </div>\n);\n\nProfile.defaultProps = {\n    avatar: defaultAvatar,\n    // avatar: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n};\n  \nProfile.propTypes = {\n    user: PropTypes.shape({\n        avatar: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        tag: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        stats: PropTypes.shape({\n            followers: PropTypes.number.isRequired,\n            views: PropTypes.number.isRequired,\n            likes: PropTypes.number.isRequired,\n        }).isRequired,\n    }),\n};\nexport default Profile;","const StatItem = ({ label, percentage }) => (\n        <li className=\"item\">\n            <span className=\"label\">{label}</span>\n            <span className=\"percentage\">{percentage}%</span>\n        </li>\n    );\n\nexport default StatItem;","import StatItem from './StatItem';\nimport PropTypes from \"prop-types\";\n\nconst StatList = ({ stats }) => (\n        <ul className=\"stat-list\">\n            {stats.map((dataItem) => (\n                <StatItem key={dataItem.id} label={dataItem.label} percentage={dataItem.percentage} />\n            ))}\n        </ul>\n    );\n\nStatList.propTypes = {\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n};\n\n\nexport default StatList;","import StatList from './StatList';\n\nconst Statistics = ({ title, stats }) => {\n    const titleMarkup = title && <h2 className=\"title\">{title}</h2>;\n    return (\n        <section className=\"statistics\">\n            {titleMarkup}\n            <StatList stats={stats} />\n        </section>\n    );\n};\nexport default Statistics;","import Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>react-01-components</h1>\n      <div className=\"components\">\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}